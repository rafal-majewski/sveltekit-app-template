name: Continuous integration on push

on:
  push:

env:
  SETUP_NODE_NODE_VERSION: 19.7
  SETUP_HELM_HELM_VERSION: v3.11.2

jobs:
  helm_lint_check:
    name: Helm lint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.SETUP_HELM_HELM_VERSION }}
      - name: Run Helm lint
        run: |
          helm lint helm
  hadolint_check:
    name: Hadolint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
  prettier_check:
    name: Prettier check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Run prettier
        run: |
          npm run prettier:check
  eslint_check:
    name: ESLint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Run eslint
        run: |
          npm run eslint:check
  vitest_check:
    name: Vitest check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Run Vitest
        run: |
          npm run vitest:check
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage_report
          path: coverage_report
  build_check:
    name: Build check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Run build
        run: |
          npm run build:check
  build:
    name: Build
    needs: [eslint_check, vitest_check, build_check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build the Docker image
        run: |
          docker build --tag=${{ github.repository }}:${{ github.sha }} --file=Dockerfile --build-arg="NODE_VERSION=${{ env.SETUP_NODE_NODE_VERSION }}" .
      - name: Upload Docker image as an artifact
        uses: ishworkh/container-image-artifact-upload@v1.0.0
        with:
          image: ${{ github.repository }}:${{ github.sha }}
  helm_package:
    name: Helm package
    needs: [helm_lint_check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Remember Helm chart version
        id: remember_helm_chart_version
        run: |
          echo "helm_chart_version=$(grep '^version:' ./helm/Chart.yaml | awk '{print $2}')" >> $GITHUB_OUTPUT
      - name: Remember Helm chart name
        id: remember_helm_chart_name
        run: |
          echo "helm_chart_name=$(grep '^name:' ./helm/Chart.yaml | awk '{print $2}')" >> $GITHUB_OUTPUT
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.SETUP_HELM_HELM_VERSION }}
      - name: Run Helm package
        run: |
          npm run helm-package
      - name: Upload Helm package
        uses: actions/upload-artifact@v3
        with:
          name: helm_chart
          path: ./${{ steps.remember_helm_chart_name.outputs.helm_chart_name }}-${{ steps.remember_helm_chart_version.outputs.helm_chart_version }}.tgz
